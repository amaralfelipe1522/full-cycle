apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 2
  template:
    metadata:
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goserver
          image: "amaralfelipe1522/example-k8s-01:v6"
          resources:
            requests: # Se refere ao mínimo necessário
              cpu: "0.3" # vCPU -> milicores (100m) ou em % ("0.3")
              memory: 20Mi
            limits: # Se refere ao máximo
              cpu: "0.3"
              memory: 25Mi
          # Startup Probe
          startupProbe:
            httpGet:
              path: /ready
              port: 3000 # porta do container
            periodSeconds: 3 # intervalo de tempo em segundos entre cada verificação
            failureThreshold: 10  # Quantidade de vezes que pode falhar até reiniciar
          # Liveness Probe
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000 # porta do container
            periodSeconds: 5 # intervalo de tempo em segundos entre cada verificação
            failureThreshold: 1  # Quantidade de vezes que pode falhar até reiniciar
            timeoutSeconds: 2 # Contará como um failure quando a requisição demorar mais de 2 segundos
            successThreshold: 1 # Quantas vezes tem que testar para ter certeza que está tudo bem
          # Readness Probe
          readinessProbe:
            httpGet:
              path: /ready
              port: 3000 # porta do container
            periodSeconds: 3 # intervalo de tempo em segundos entre cada verificação
            failureThreshold: 1  # Quantidade de vezes que pode falhar até reiniciar
            timeoutSeconds: 1 # Contará como um failure quando a requisição demorar mais de 2 segundos
            successThreshold: 1 # Quantas vezes tem que testar para ter certeza que está tudo bem
            initialDelaySeconds: 2 # Começará a verificar a partir de 2 segundos
          envFrom:
            - configMapRef:
                name: goserver-env
            - secretRef:
                name: goserver-secret
          volumeMounts:
            - mountPath: "/go/pvc"
              name: goserver-pvc
            - mountPath: "/go/my-family"
              name: config
      volumes:
        # Binding do volume claim com o storageclass
        - name: goserver-pvc
          persistentVolumeClaim:
            claimName: goserver-pvc
        # Configmap Volume
        - name: config
          configMap:
            name: goserver-configfamily-family
            items:
              - key: members
                path: "family.txt"
          # env:
          #   - name: NAME
          #     valueFrom:
          #       configMapKeyRef:
          #         name: goserver-env
          #         key: NAME
          #   - name: AGE
          #     valueFrom:
          #       configMapKeyRef:
          #         name: goserver-env
          #         key: AGE